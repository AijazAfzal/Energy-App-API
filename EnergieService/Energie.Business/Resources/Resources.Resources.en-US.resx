<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Added_help_from_the_employer_with_employerHelpID" xml:space="preserve">
    <value>Added help from the employer</value>
  </data>
  <data name="Already_exists" xml:space="preserve">
    <value>{0} Already exists</value>
  </data>
  <data name="Business_tips_with_ID_remote" xml:space="preserve">
    <value>Business tips with ID : {0} remote</value>
  </data>
  <data name="Business_tips_with_ID_Update" xml:space="preserve">
    <value>Business tips with ID: {0} updated</value>
  </data>
  <data name="Company_added" xml:space="preserve">
    <value>Company added</value>
  </data>
  <data name="Company_administrator_added" xml:space="preserve">
    <value>Company administrator added</value>
  </data>
  <data name="Company_administrator_already_exist" xml:space="preserve">
    <value>Company Admin already exist</value>
  </data>
  <data name="Company_exists" xml:space="preserve">
    <value>Company already exists</value>
  </data>
  <data name="Deadline_for_the_Energy_Plan" xml:space="preserve">
    <value>EnergiePlan : The deadline for the Energy Plan with the description {0} approaching inside {1} days</value>
  </data>
  <data name="DepartmentName_with_ID_added" xml:space="preserve">
    <value>{0} added</value>
  </data>
  <data name="Department_added" xml:space="preserve">
    <value>Department with {0} added</value>
  </data>
  <data name="Department_favorite_tip_Removed" xml:space="preserve">
    <value>Department favorite tip Removed</value>
  </data>
  <data name="Department_favorite_tip_with_ID_added_for_the_user" xml:space="preserve">
    <value>Department tip is added by the user</value>
  </data>
  <data name="Department_Removed" xml:space="preserve">
    <value>Department with {0} removed</value>
  </data>
  <data name="Department_tip_removed" xml:space="preserve">
    <value>Department tip removed</value>
  </data>
  <data name="Department_tip_with_DepartmentTipbyUserID_is_added_by_the_user" xml:space="preserve">
    <value>Department tip is added by the user</value>
  </data>
  <data name="Employer_helps_with_id_update" xml:space="preserve">
    <value>Employer helps with id {0} updated</value>
  </data>
  <data name="Energy_department_plan_added" xml:space="preserve">
    <value>Energy plan department successfully added</value>
  </data>
  <data name="Energy_plan_added" xml:space="preserve">
    <value>Energy plan added</value>
  </data>
  <data name="Energy_plan_exists" xml:space="preserve">
    <value>Energy plan already exists</value>
  </data>
  <data name="Energy_plan_removed" xml:space="preserve">
    <value>Energy plan successfully removed</value>
  </data>
  <data name="Energy_plan_updated" xml:space="preserve">
    <value>Energy plan successfully updated</value>
  </data>
  <data name="Error_occurred" xml:space="preserve">
    <value>An error occurred in</value>
  </data>
  <data name="FavoriteHelp_added" xml:space="preserve">
    <value>FavoriteHelp added</value>
  </data>
  <data name="FavoriteHelp_Removed" xml:space="preserve">
    <value>FavoriteHelp Removed</value>
  </data>
  <data name="Favorite_tip_added" xml:space="preserve">
    <value>Favorite tip added</value>
  </data>
  <data name="Favorite_tip_exists" xml:space="preserve">
    <value>Favorite tip already exists</value>
  </data>
  <data name="favorite_tip_not_exist" xml:space="preserve">
    <value>favorite tip doesn't exist</value>
  </data>
  <data name="Favorite_tip_removed" xml:space="preserve">
    <value>Favourite tip removed</value>
  </data>
  <data name="Feedback_already_exists" xml:space="preserve">
    <value>Feedback for this user already exists</value>
  </data>
  <data name="Feedback_exist" xml:space="preserve">
    <value>You're already giving your feedback</value>
  </data>
  <data name="Feedback_Update" xml:space="preserve">
    <value>feedback updated</value>
  </data>
  <data name="Give_feedback" xml:space="preserve">
    <value>Give your feedback</value>
  </data>
  <data name="Help_removed" xml:space="preserve">
    <value>Help removed</value>
  </data>
  <data name="Help_Tip_Added" xml:space="preserve">
    <value>Tip Added</value>
  </data>
  <data name="Help_tip_from_the_company_with_ID" xml:space="preserve">
    <value>Help tip from the company with this ID {0} has been added</value>
  </data>
  <data name="Help_Tip_Removed" xml:space="preserve">
    <value>Tip Removed</value>
  </data>
  <data name="Language_user_updated" xml:space="preserve">
    <value>Language for business user successfully updated </value>
  </data>
  <data name="Plan_updated" xml:space="preserve">
    <value>Plan updated</value>
  </data>
  <data name="Score_added" xml:space="preserve">
    <value>Energy score added</value>
  </data>
  <data name="Score_exists_for_this_month" xml:space="preserve">
    <value>Energy score already exists for this month</value>
  </data>
  <data name="Something_failed" xml:space="preserve">
    <value>Something failed</value>
  </data>
  <data name="Something_wrong" xml:space="preserve">
    <value>Something went wrong</value>
  </data>
  <data name="Subscription_removed" xml:space="preserve">
    <value>Subscription removed</value>
  </data>
  <data name="Thanks_for_feedback" xml:space="preserve">
    <value>Thanks for your feedback</value>
  </data>
  <data name="Tip_added" xml:space="preserve">
    <value>Tip with this ID {0} added</value>
  </data>
  <data name="Tip_added_department_by_User" xml:space="preserve">
    <value>EnergyTip : Tip added to your department by {0} with description {1}</value>
  </data>
  <data name="Tip_removed" xml:space="preserve">
    <value>Tip removed </value>
  </data>
  <data name="Tip_Update" xml:space="preserve">
    <value>Tip Updated</value>
  </data>
  <data name="Update_department_tip" xml:space="preserve">
    <value>Gratuity hereby {0} Id updated</value>
  </data>
  <data name="Update_energy_analysis_notification" xml:space="preserve">
    <value>EnergyAnalysis : As the year draws to a close, we kindly ask you to update your energy analysis</value>
  </data>
  <data name="User_added" xml:space="preserve">
    <value>User added</value>
  </data>
  <data name="User_deleted" xml:space="preserve">
    <value>User has been deleted</value>
  </data>
  <data name="User_departmenttip_with_id_updated" xml:space="preserve">
    <value>User department tip with this id {0} has been updated</value>
  </data>
  <data name="User_successfully_removed" xml:space="preserve">
    <value>Company user account at {0} successfully removed</value>
  </data>
  <data name="User_tip_added" xml:space="preserve">
    <value>User tip added</value>
  </data>
  <data name="User_tip_updated" xml:space="preserve">
    <value>User tip has been updated</value>
  </data>
</root>